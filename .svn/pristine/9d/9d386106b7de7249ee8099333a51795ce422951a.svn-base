package cn.smartcandy.common.utils;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.commons.collections.CollectionUtils;

import cn.smartcandy.application.a.account.User;
import cn.smartcandy.application.cms.release.ReleaseBiz;
import cn.smartcandy.application.cms.release.ReleaseCategary;
import cn.smartcandy.common.common.SessionKeys;
import cn.smartcandy.framework.core.exception.BusinessException;
import cn.smartcandy.framework.utils.CStringUtils;

public class TMemberUtils {
	
	/**
	 * 方法描述：是不是用户
	 * @param object
	 * @return boolean
	 * @throws BusinessException
	 */
	public static boolean isUser(Object object){
		return (null != object && object instanceof User);
	}
	
	/**
	 * 方法描述：是不是管理员
	 * @param object
	 * @return boolean
	 * @throws BusinessException
	 */
	public static boolean isAdmin(Object object){
		boolean flag = Boolean.FALSE;
		if (null != object && object instanceof User) {
			User user  = (User) object;
			if (User.VERFY_ADMIN.equals(user.getVerfyID())) {
				flag = Boolean.TRUE;
			}
		}
		return flag;
	}
	
	// 将登陆用户保存
	public static void saveUser(HttpServletRequest request,User user){
		HttpSession session = request.getSession();
		session.setAttribute(SessionKeys.LOGIN_USER, user);
	}
	// 获取session数据，不加判断
	public static Object getUser(HttpServletRequest request){
		HttpSession session = request.getSession();
		Object attribute = session.getAttribute(SessionKeys.LOGIN_USER);
		return attribute;
	}
	// 缓存种类
	public static void saveCategaryList(HttpServletRequest request,List<ReleaseCategary> categaryList){
		System.out.println("-------------------------------------->将Admin的categaryList缓存起来");
		TStringUtils.printList(categaryList);
		HttpSession session = request.getSession();
		session.setAttribute(SessionKeys.ADMIN_CATE, categaryList);
	}

	// 获取用户种类
	@SuppressWarnings("unchecked")
	public static List<ReleaseCategary> getCategaryList(HttpServletRequest request){
		System.out.println("-------------------------------------->获取缓存Admin的categaryList");
		// 获取缓存信息
		HttpSession session = request.getSession();
		List<ReleaseCategary> categaryList = (List<ReleaseCategary>) session.getAttribute(SessionKeys.USER_CATE);
		if (CollectionUtils.isEmpty(categaryList)) {
			Map<String, String> param = new HashMap<>();
			categaryList = new ReleaseBiz().queryCategaryList(param);
			TMemberUtils.saveCategaryList(request, categaryList);
		}
		return categaryList;
	}
	
	// 获取CateName
	public static String getCategaryName(HttpServletRequest request,String cateSequence){
		System.out.println("-------------------------------------->获取缓存Admin的categaryName");
		// 获取缓存信息
		List<ReleaseCategary> categaryList = TMemberUtils.getCategaryList(request);
		String cateName = null;
		for (int i = 0; i < categaryList.size(); i++) {
			ReleaseCategary categary = categaryList.get(i);
			if (CStringUtils.equals(categary.getCateSequence(), categary.getCateSequence())) {
				cateName = categary.getCateName();
				break;
			}
		}
		return cateName;
	}

	/**
	 * 方法描述：注销登录，清除信息
	 * @param request
	 * @param user
	 * @return void
	 * @throws BusinessException
	 */
	public static void clearUser(HttpServletRequest request,User user){
		HttpSession session = request.getSession();
		session.removeAttribute(SessionKeys.LOGIN_USER);
		session.removeAttribute(SessionKeys.ATTENTION_USERS);
		session.removeAttribute(SessionKeys.ADMIN_CATE);
		session.removeAttribute(SessionKeys.USER_CATE);
		session.invalidate();
	}
	
	
	/**
	 * 方法描述  比对用户信息，判断是否关注过
	 * @param userList
	 * @return boolean
	 * @throws BusinessException
	 */
	@SuppressWarnings("unchecked")
	public static List<User>  filterAttentionUserList(HttpServletRequest request, List<User> usrList){
		HttpSession session = request.getSession();
		List<String> usrSeqList = (List<String>) session.getAttribute(SessionKeys.ATTENTION_USERS);
		User user = null;
		for (int i = 0; null!=usrList && i<usrList.size(); i++) {
			user = usrList.get(i);
			if (usrSeqList.contains(user.getUserSequence())) {
				usrList.get(i).setHasAttention(Boolean.TRUE);
			}else{
				usrList.get(i).setHasAttention(Boolean.FALSE);
			}
		}
		return usrList;
	}
}
